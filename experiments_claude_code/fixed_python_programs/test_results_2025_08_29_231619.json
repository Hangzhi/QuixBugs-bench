{
  "metadata": {
    "timestamp": "2025-08-29T23:16:19.157935",
    "correct_version": false,
    "run_slow": false,
    "program_folder": "experiments_claude_code/fixed_python_programs",
    "timeout": 10,
    "total_programs": 40
  },
  "results": [
    {
      "program": "bitcount",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_bitcount.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": 1
    },
    {
      "program": "breadth_first_search",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_breadth_first_search.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": 1
    },
    {
      "program": "bucketsort",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_bucketsort.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": 1
    },
    {
      "program": "depth_first_search",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_depth_first_search.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": 1
    },
    {
      "program": "detect_cycle",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_detect_cycle.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": 4
    },
    {
      "program": "find_first_in_sorted",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_find_first_in_sorted.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": 1
    },
    {
      "program": "find_in_sorted",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_find_in_sorted.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": 1
    },
    {
      "program": "flatten",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_flatten.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "gcd",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_gcd.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "get_factors",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_get_factors.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "hanoi",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_hanoi.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "is_valid_parenthesization",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_is_valid_parenthesization.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "kheapsort",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_kheapsort.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "knapsack",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_knapsack.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "kth",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_kth.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "lcs_length",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_lcs_length.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "levenshtein",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_levenshtein.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "lis",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_lis.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "longest_common_subsequence",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_longest_common_subsequence.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "max_sublist_sum",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_max_sublist_sum.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "mergesort",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_mergesort.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "minimum_spanning_tree",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_minimum_spanning_tree.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "next_palindrome",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_next_palindrome.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "next_permutation",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_next_permutation.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "pascal",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_pascal.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "possible_change",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_possible_change.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "powerset",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_powerset.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "quicksort",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_quicksort.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "reverse_linked_list",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_reverse_linked_list.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "rpn_eval",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_rpn_eval.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "shortest_path_length",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_shortest_path_length.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "shortest_path_lengths",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_shortest_path_lengths.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "shortest_paths",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_shortest_paths.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "shunting_yard",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_shunting_yard.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "sieve",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_sieve.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "sqrt",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_sqrt.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "subsequences",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_subsequences.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "to_base",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_to_base.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "topological_ordering",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_topological_ordering.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    },
    {
      "program": "wrap",
      "status": "FAILED",
      "passed": -1,
      "skipped": -1,
      "failed": -1,
      "return_code": 2,
      "command": "pytest python_testcases/test_wrap.py -v --tb=short --timeout=10 --program-folder experiments_claude_code/fixed_python_programs",
      "diff_line_count": -1
    }
  ],
  "summary": {
    "passed": 0,
    "failed": 40,
    "errors": 0,
    "timeouts": 0,
    "total": 40
  }
}